#include<iostream>
using namespace std;
int binarypivot(int *a,int s,int e)
{
    //iterative
    while(s<=e)
    {
        int ans;
        int mid=(s+e)/2;
        if(a[mid]>a[mid-1]&&a[mid]>a[mid+1])
        {
            ans=mid;
            return ans;
        }
        else if(a[mid]>a[mid-1]&&a[mid]<a[mid+1])
        {
            if(a[mid]<=a[e])
            {
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
        }
        else if(a[mid]<a[mid-1]&&a[mid]<a[mid+1])
            return mid-1;
    }
}
int binarysearch(int *a,int s,int e,int key)
{
    //iterative
    int ans=-1;
    while(s<=e)
    {
        int mid=(s+e)/2;
        if(a[mid]>key)
        {
            e=mid-1;
        }
        else if(a[mid]<key)
        {
            s=mid+1;
        }
        else
        {
            ans=mid;
            return ans;
        }
    }
    return ans;
}
int main(void)
{
    int n;
    cin>>n;
    int a[n];
    for(int i=0;i<n;i++)
        cin>>a[i];
    int x=binarypivot(a,0,n-1);
    int key;
    cin>>key;
    if(key>a[0])
    {
        cout<<binarysearch(a,0,x,key);
    }
    else
        cout<<binarysearch(a,x+1,n-1,key);
}
